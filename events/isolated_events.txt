namespace = isolated

country_event = {
    id = isolated.1
    hide_window = yes
	is_triggered_only = yes
	fire_only_once = yes
    trigger = {
		has_valid_civic = civic_isolated
		exists = capital_scope
	}

	immediate = {
		add_seen_bypass_type = gateway
		set_spawn_system_batch = begin
		no_scope = {

				spawn_system = {
					min_distance >=  560 
					max_distance <=  561 
					min_orientation_angle = 321 
					max_orientation_angle = 322 
					initializer = init_isolated
					hyperlane = no
				}
		}

		set_spawn_system_batch = end
		event_target:isolated_planet = {
			set_owner = root
			change_pc_to_normal = yes
			generate_start_buildings_and_districts = yes
			add_district = district_city
			add_building = building_hydroponics_farm
			root = {
				every_owned_pop = {
					resettle_pop = {
						pop = this
						planet = prevprev
					}
				}
				every_owned_fleet = {
					if = {
						limit = {
							or = {
								is_ship_class = shipclass_mining_station
								is_ship_class = shipclass_research_station
								is_ship_class = shipclass_starbase
							}
						}
						delete_fleet = this
					}
					else = {
						set_location = prevprev.system_star
					}
				}
			}
			set_capital = yes
			create_starbase_starport_from_planet = yes
			starbase_add_shipyard_0 = yes
		}
	}
}

country_event = {
	id = isolated.2
	hide_window = yes
	is_triggered_only = yes
	fire_only_once = yes
	trigger = {
		has_valid_civic = civic_cluster
		exists = capital_scope
	}
	immediate = {
		set_spawn_system_batch = begin
		no_scope = {
			spawn_system = {
				min_distance >= 515
				max_distance <= 516
				min_orientation_angle = 90
				max_orientation_angle = 100
				initializer = pg_cluster_01
			}
			random_system = {
				limit = { has_star_flag = pg_cluster_01 }
        save_global_event_target_as = pg_cluster_01
				spawn_system = {
					min_distance >= 20
					max_distance <= 22
					min_orientation_angle = 260
					max_orientation_angle = 265
					initializer = pg_cluster_02
				}
				spawn_system = {
					min_distance >= 20
					max_distance <= 22
					min_orientation_angle = 181
					max_orientation_angle = 185
					initializer = pg_cluster_03
				}
				spawn_system = {
					min_distance >= 25
					max_distance <= 29
					min_orientation_angle = 190
					max_orientation_angle = 195
					initializer = pg_cluster_home
				}
				spawn_system = {
					min_distance >= 15
					max_distance <= 17
					min_orientation_angle = 150
					max_orientation_angle = 155
					initializer = pg_cluster_04
				}
				spawn_system = {
					min_distance >= 30
					max_distance <= 35
					min_orientation_angle = 34
					max_orientation_angle = 37
					initializer = pg_cluster_05
				}
			}
		}
		random_system = {
			limit = { has_star_flag = pg_cluster_02 }
			save_global_event_target_as = pg_cluster_02
			spawn_system = {
				min_distance >= 21
				max_distance <= 23
				min_orientation_angle = 250
				max_orientation_angle = 255
				initializer = pg_cluster_08
			}
		}
		random_system = {
			limit = { has_star_flag = pg_cluster_03 }
			save_global_event_target_as = pg_cluster_03
			spawn_system = {
				min_distance >= 28
				max_distance <= 30
				min_orientation_angle = 190
				max_orientation_angle = 195
				initializer = pg_cluster_07
			}
		}
		random_system = {
			limit = { has_star_flag = pg_cluster_04 }
			save_global_event_target_as = pg_cluster_04
			spawn_system = {
				min_distance >= 18
				max_distance <= 20
				min_orientation_angle = 15
				max_orientation_angle = 17
				initializer = pg_cluster_06
			}
		}
		random_system = {
			limit = { has_star_flag = pg_cluster_05 }
			save_global_event_target_as = pg_cluster_05
		}
		random_system = {
			limit = { has_star_flag = pg_cluster_06 }
			save_global_event_target_as = pg_cluster_06
		}
		random_system = {
			limit = { has_star_flag = pg_cluster_07 }
			save_global_event_target_as = pg_cluster_07
		}
		random_system = {
			limit = { has_star_flag = pg_cluster_08 }
			save_global_event_target_as = pg_cluster_08
		}
		random_system = {
			limit = { has_star_flag = pg_cluster_home }
			save_global_event_target_as = pg_cluster_home
		}
		# clear all hyperlanes to and within the cluster
		every_system = {
			limit = { has_star_flag = pg_cluster }
			isolate_system = yes
		}
    # add hyperlanes
		event_target:pg_cluster_01 = {
			add_hyperlane = {
				from = event_target:pg_cluster_01
				to = event_target:pg_cluster_02
			}
		}
		event_target:pg_cluster_01 = {
			add_hyperlane = {
				from = event_target:pg_cluster_01
				to = event_target:pg_cluster_03
			}
		}
		event_target:pg_cluster_01 = {
			add_hyperlane = {
				from = event_target:pg_cluster_01
				to = event_target:pg_cluster_04
			}
		}
		event_target:pg_cluster_01 = {
			add_hyperlane = {
				from = event_target:pg_cluster_01
				to = event_target:pg_cluster_05
			}
		}
		event_target:pg_cluster_02 = {
			add_hyperlane = {
				from = event_target:pg_cluster_02
				to = event_target:pg_cluster_03
			}
		}
		event_target:pg_cluster_03 = {
			add_hyperlane = {
				from = event_target:pg_cluster_03
				to = event_target:pg_cluster_07
			}
		}
		event_target:pg_cluster_03 = {
			add_hyperlane = {
				from = event_target:pg_cluster_03
				to = event_target:pg_cluster_home
			}
		}
		event_target:pg_cluster_02 = {
			add_hyperlane = {
				from = event_target:pg_cluster_02
				to = event_target:pg_cluster_08
			}
		}
		event_target:pg_cluster_04 = {
			add_hyperlane = {
				from = event_target:pg_cluster_04
				to = event_target:pg_cluster_06
			}
		}
		# add wormholes
    random_system = {
      limit = {
        has_natural_wormhole = no
        is_fe_cluster = no
        NOR = {
          has_star_flag = abandoned_gateway
          has_star_flag = AI_hub
          has_star_flag = empire_home_system
          has_star_flag = empire_cluster
          has_star_flag = hostile_system
          has_star_flag = sol
          has_star_flag = pg_cluster
          has_star_flag = marauder_system
        }
      }
      event_target:pg_cluster_05 = {
				# done this way to ensure we don't spawn "orphan" wormholes (wormholes that aren't linked to anything)
					spawn_natural_wormhole = {
					bypass_type = wormhole
					random_pos = yes
					orbit_angle = 360
				}
			}
			spawn_natural_wormhole = {
				bypass_type = wormhole
				random_pos = yes
				orbit_angle = 360
			}
			link_wormholes = event_target:pg_cluster_05
    }
		set_spawn_system_batch = end

		event_target:cluster_home_planet  = {
			set_owner = root
			change_pc_to_normal = yes
			generate_start_buildings_and_districts = yes
			add_district = district_city
			root = {
				every_owned_pop = {
					resettle_pop = {
						pop = this
						planet = prevprev
					}
				}
				every_owned_fleet = {
					if = {
						limit = {
							or = {
								is_ship_class = shipclass_mining_station
								is_ship_class = shipclass_research_station
								is_ship_class = shipclass_starbase
							}
						}
						delete_fleet = this
					}
					else = {
						set_location = prevprev.system_star
					}
				}
			}
			set_capital = yes
			create_starbase_starport_from_planet = yes
			starbase_add_shipyard_0 = yes
		}
	}
}